<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Ethvironment Front-End</title>

<script type="module" src="https://unpkg.com/@metamask/detect-provider/dist/detect-provider.min.js"></script>
<link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet">

<style media="screen">
    	*,
*:before,
*:after{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
body{
}
.popup{
    background-color: #B0FFAC;
    width: 420px;
    padding: 30px 40px;
    position: absolute;
    transform: translate(-50%,-50%);
    left: 50%;
    top: 50%;
    border-radius: 8px;
    font-family: "Poppins",sans-serif;
    display: none; 
    text-align: center;
}
.popup button{
    display: block;
    margin:  0 0 20px auto;
    background-color: transparent;
    font-size: 30px;
    color: #000000;
		background: #B0FFAC;
		border-radius: 100%;
		width: 40px;
		height: 40px;
    border: none;
    outline: none;
    cursor: pointer;
}
.popup h2{
	margin-top: -20px;
}
.popup p{
    font-size: 14px;
    text-align: justify;
    margin: 20px 0;
    line-height: 25px;
}
a{
    display: block;
    width: 150px;
    position: relative;
    margin: 10px auto;
    text-align: center;
    background-color: #0f72e5;
		border-radius: 20px;
    color: #ffffff;
    text-decoration: none;
    padding: 8px 0;
}
    </style>
</head>


<body>
<div class="popup">
        <button id="close">&times;</button>
        <h2>Metamask Error</h2>
        <p>
            Please Download Metamask Wallet to Continue

        </p>
        <a href="https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn" target = "_blank" >Download</a>
    </div>


<script>
//import detectEthereumProvider from '@metamask/detect-provider';
async function checkMetaMask(){
const provider =  await detectEthereumProvider();

if (provider) {
  // From now on, this should always be true:
  // provider === window.ethereum
  //startApp(provider); // initialize your app
  console.log(provider)
} else {
        document.querySelector(".popup").style.display = "block";
        document.querySelector("#close").addEventListener("click", function(){
        document.querySelector(".popup").style.display = "none";
        });
}
}
    /*window.addEventListener('load', async () => {
    // Modern dapp browsers...
    if (window.ethereum) {
        console.log("Eth Success");
        window.web3 = new Web3(ethereum);
        try {
            // Request account access if needed
            await ethereum.enable();
            // Acccounts now exposed
            web3.eth.sendTransaction({/* ... });
        } catch (error) {
            // User denied account access...
        }
    }
    // Legacy dapp browsers...
    else if (window.web3) {
        console.log("Web3 Success")
        window.web3 = new Web3(web3.currentProvider);
        // Acccounts always exposed
        web3.eth.sendTransaction({/* ... });
    }
    // Non-dapp browsers...
    else {
        document.querySelector(".popup").style.display = "block";
        document.querySelector("#close").addEventListener("click", function(){
        document.querySelector(".popup").style.display = "none";
        });
    }
});*/

//console.log("Test Success");
  // Now you can start your app & access web3js freely:
  //startApp()
  //web3js = new Web3(web3.currentProvider);
window.addEventListener('load',checkMetaMask);
</script>
</body>
</html>
